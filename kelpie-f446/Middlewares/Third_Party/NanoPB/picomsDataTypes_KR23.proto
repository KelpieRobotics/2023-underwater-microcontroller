syntax = "proto2";

package KR23;
//package KelpieRobotics_2023;

enum KelpieResult 
{
    OK = 0;
    ERROR_I2C = 1;
    ERROR_UART = 2;
    ERROR_NETWORK = 3;
    ERROR_PIN_ERROR = 4;
    ERROR_VALUE_ERROR = 5;
	WARNING = 6;
}

enum KelpieClawState
{
	IDLE = 0;
	CLOSE = 1;
	OPEN = 2;
}

message ThrusterCommand 
{
    optional uint32 thruster_0_PWM = 1;
    optional uint32 thruster_1_PWM = 2;
    optional uint32 thruster_2_PWM = 3;
    optional uint32 thruster_3_PWM = 4;
    optional uint32 thruster_4_PWM = 5;
    optional uint32 thruster_5_PWM = 6;
    optional uint32 thruster_6_PWM = 7;
    optional uint32 thruster_7_PWM = 8;
    
    required KelpieResult result = 14;
}

message AttachmentCommand 
{
    optional uint32 servo_0_PWM = 1;
    optional uint32 servo_1_PWM = 2;
    optional uint32 servo_2_PWM = 3;
    
    optional uint32 light_PWM = 4;
    
    optional KelpieClawState claw_state = 5;
    
    required KelpieResult result = 14;
}

message SensorsData 
{
    required double temperature = 1;
    required double humidity = 2;
    
    required double pressure = 3;
    required double depth = 4;
    
    required double accelerometer_x = 5;
    required double accelerometer_y = 6;
    required double accelerometer_z = 7;
    
    required double quaternion_real = 8;
    required double quaternion_i = 9;
    required double quaternion_j = 10;
    required double quaternion_k = 11;
    
    required KelpieResult result = 14;
}

message SafetyData 
{
    required double power_0 = 1;
    required double power_1 = 2;
    required double power_2 = 3;
    required double power_3 = 4;
    
    required double current_0 = 5;
    required double current_1 = 6;
    required double current_2 = 7;
    required double current_3 = 8;
    
    required double voltage_0 = 9;
    required double voltage_1 = 10;
    required double voltage_2 = 11;
    required double voltage_3 = 12;
    
    required bool leak = 13;
    
    required KelpieResult result = 14;
}

message PollMessage 
{
    required uint32 thruster_0_PWM = 1;
    required uint32 thruster_1_PWM = 2;
    required uint32 thruster_2_PWM = 3;
    required uint32 thruster_3_PWM = 4;
    required uint32 thruster_4_PWM = 5;
    required uint32 thruster_5_PWM = 6;
    required uint32 thruster_6_PWM = 7;
    required uint32 thruster_7_PWM = 8;
    
    required uint32 servo_0_PWM = 9;
    required uint32 servo_1_PWM = 10;
    required uint32 servo_2_PWM = 11;
    
    required uint32 light_PWM = 12;
    
    required uint32 claw_state = 13;

    required KelpieResult result = 14;
}

message OutgoingMessage 
{
    optional ThrusterCommand thrusterCommand = 1;
    optional AttachmentCommand attachmentCommand = 2;
}

message IncomingMessage 
{
    optional SensorsData sensorsData = 1;
    optional SafetyData safetyData = 2;
    optional PollMessage pollMessage = 3;
}