/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_KR23_PICOMSDATATYPES_KR23_PROTO3_PB_H_INCLUDED
#define PB_KR23_PICOMSDATATYPES_KR23_PROTO3_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _KR23_KelpieResult {
    KR23_KelpieResult_OK = 0,
    KR23_KelpieResult_ERROR_I2C = 1,
    KR23_KelpieResult_ERROR_UART = 2,
    KR23_KelpieResult_ERROR_NETWORK = 3,
    KR23_KelpieResult_ERROR_PIN_ERROR = 4,
    KR23_KelpieResult_ERROR_VALUE_ERROR = 5,
    KR23_KelpieResult_WARNING = 6
} KR23_KelpieResult;

typedef enum _KR23_KelpieClawState {
    KR23_KelpieClawState_IDLE = 0,
    KR23_KelpieClawState_CLOSE = 1,
    KR23_KelpieClawState_OPEN = 2
} KR23_KelpieClawState;

/* Struct definitions */
typedef struct _KR23_ThrusterCommand {
    uint32_t thruster_0_PWM;
    uint32_t thruster_1_PWM;
    uint32_t thruster_2_PWM;
    uint32_t thruster_3_PWM;
    uint32_t thruster_4_PWM;
    uint32_t thruster_5_PWM;
    uint32_t thruster_6_PWM;
    uint32_t thruster_7_PWM;
    KR23_KelpieResult result;
} KR23_ThrusterCommand;

typedef struct _KR23_AttachmentCommand {
    uint32_t servo_0_PWM;
    uint32_t servo_1_PWM;
    uint32_t servo_2_PWM;
    uint32_t light_PWM;
    KR23_KelpieClawState claw_state;
    KR23_KelpieResult result;
} KR23_AttachmentCommand;

typedef struct _KR23_SensorsData {
    double temperature;
    double humidity;
    double pressure;
    double depth;
    double accelerometer_x;
    double accelerometer_y;
    double accelerometer_z;
    double quaternion_real;
    double quaternion_i;
    double quaternion_j;
    double quaternion_k;
    KR23_KelpieResult result;
} KR23_SensorsData;

typedef struct _KR23_SafetyData {
    double power_0;
    double power_1;
    double power_2;
    double power_3;
    double current_0;
    double current_1;
    double current_2;
    double current_3;
    double voltage_0;
    double voltage_1;
    double voltage_2;
    double voltage_3;
    bool leak;
    KR23_KelpieResult result;
} KR23_SafetyData;

typedef struct _KR23_PollMessage {
    uint32_t thruster_0_PWM;
    uint32_t thruster_1_PWM;
    uint32_t thruster_2_PWM;
    uint32_t thruster_3_PWM;
    uint32_t thruster_4_PWM;
    uint32_t thruster_5_PWM;
    uint32_t thruster_6_PWM;
    uint32_t thruster_7_PWM;
    uint32_t servo_0_PWM;
    uint32_t servo_1_PWM;
    uint32_t servo_2_PWM;
    uint32_t light_PWM;
    uint32_t claw_state;
    KR23_KelpieResult result;
} KR23_PollMessage;

typedef struct _KR23_OutgoingMessage {
    bool has_thrusterCommand;
    KR23_ThrusterCommand thrusterCommand;
    bool has_attachmentCommand;
    KR23_AttachmentCommand attachmentCommand;
} KR23_OutgoingMessage;

typedef struct _KR23_IncomingMessage {
    bool has_sensorsData;
    KR23_SensorsData sensorsData;
    bool has_safetyData;
    KR23_SafetyData safetyData;
    bool has_pollMessage;
    KR23_PollMessage pollMessage;
} KR23_IncomingMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _KR23_KelpieResult_MIN KR23_KelpieResult_OK
#define _KR23_KelpieResult_MAX KR23_KelpieResult_WARNING
#define _KR23_KelpieResult_ARRAYSIZE ((KR23_KelpieResult)(KR23_KelpieResult_WARNING+1))

#define _KR23_KelpieClawState_MIN KR23_KelpieClawState_IDLE
#define _KR23_KelpieClawState_MAX KR23_KelpieClawState_OPEN
#define _KR23_KelpieClawState_ARRAYSIZE ((KR23_KelpieClawState)(KR23_KelpieClawState_OPEN+1))

#define KR23_ThrusterCommand_result_ENUMTYPE KR23_KelpieResult

#define KR23_AttachmentCommand_claw_state_ENUMTYPE KR23_KelpieClawState
#define KR23_AttachmentCommand_result_ENUMTYPE KR23_KelpieResult

#define KR23_SensorsData_result_ENUMTYPE KR23_KelpieResult

#define KR23_SafetyData_result_ENUMTYPE KR23_KelpieResult

#define KR23_PollMessage_result_ENUMTYPE KR23_KelpieResult




/* Initializer values for message structs */
#define KR23_ThrusterCommand_init_default        {0, 0, 0, 0, 0, 0, 0, 0, _KR23_KelpieResult_MIN}
#define KR23_AttachmentCommand_init_default      {0, 0, 0, 0, _KR23_KelpieClawState_MIN, _KR23_KelpieResult_MIN}
#define KR23_SensorsData_init_default            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _KR23_KelpieResult_MIN}
#define KR23_SafetyData_init_default             {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _KR23_KelpieResult_MIN}
#define KR23_PollMessage_init_default            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _KR23_KelpieResult_MIN}
#define KR23_OutgoingMessage_init_default        {false, KR23_ThrusterCommand_init_default, false, KR23_AttachmentCommand_init_default}
#define KR23_IncomingMessage_init_default        {false, KR23_SensorsData_init_default, false, KR23_SafetyData_init_default, false, KR23_PollMessage_init_default}
#define KR23_ThrusterCommand_init_zero           {0, 0, 0, 0, 0, 0, 0, 0, _KR23_KelpieResult_MIN}
#define KR23_AttachmentCommand_init_zero         {0, 0, 0, 0, _KR23_KelpieClawState_MIN, _KR23_KelpieResult_MIN}
#define KR23_SensorsData_init_zero               {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _KR23_KelpieResult_MIN}
#define KR23_SafetyData_init_zero                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _KR23_KelpieResult_MIN}
#define KR23_PollMessage_init_zero               {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _KR23_KelpieResult_MIN}
#define KR23_OutgoingMessage_init_zero           {false, KR23_ThrusterCommand_init_zero, false, KR23_AttachmentCommand_init_zero}
#define KR23_IncomingMessage_init_zero           {false, KR23_SensorsData_init_zero, false, KR23_SafetyData_init_zero, false, KR23_PollMessage_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define KR23_ThrusterCommand_thruster_0_PWM_tag  1
#define KR23_ThrusterCommand_thruster_1_PWM_tag  2
#define KR23_ThrusterCommand_thruster_2_PWM_tag  3
#define KR23_ThrusterCommand_thruster_3_PWM_tag  4
#define KR23_ThrusterCommand_thruster_4_PWM_tag  5
#define KR23_ThrusterCommand_thruster_5_PWM_tag  6
#define KR23_ThrusterCommand_thruster_6_PWM_tag  7
#define KR23_ThrusterCommand_thruster_7_PWM_tag  8
#define KR23_ThrusterCommand_result_tag          14
#define KR23_AttachmentCommand_servo_0_PWM_tag   1
#define KR23_AttachmentCommand_servo_1_PWM_tag   2
#define KR23_AttachmentCommand_servo_2_PWM_tag   3
#define KR23_AttachmentCommand_light_PWM_tag     4
#define KR23_AttachmentCommand_claw_state_tag    5
#define KR23_AttachmentCommand_result_tag        14
#define KR23_SensorsData_temperature_tag         1
#define KR23_SensorsData_humidity_tag            2
#define KR23_SensorsData_pressure_tag            3
#define KR23_SensorsData_depth_tag               4
#define KR23_SensorsData_accelerometer_x_tag     5
#define KR23_SensorsData_accelerometer_y_tag     6
#define KR23_SensorsData_accelerometer_z_tag     7
#define KR23_SensorsData_quaternion_real_tag     8
#define KR23_SensorsData_quaternion_i_tag        9
#define KR23_SensorsData_quaternion_j_tag        10
#define KR23_SensorsData_quaternion_k_tag        11
#define KR23_SensorsData_result_tag              14
#define KR23_SafetyData_power_0_tag              1
#define KR23_SafetyData_power_1_tag              2
#define KR23_SafetyData_power_2_tag              3
#define KR23_SafetyData_power_3_tag              4
#define KR23_SafetyData_current_0_tag            5
#define KR23_SafetyData_current_1_tag            6
#define KR23_SafetyData_current_2_tag            7
#define KR23_SafetyData_current_3_tag            8
#define KR23_SafetyData_voltage_0_tag            9
#define KR23_SafetyData_voltage_1_tag            10
#define KR23_SafetyData_voltage_2_tag            11
#define KR23_SafetyData_voltage_3_tag            12
#define KR23_SafetyData_leak_tag                 13
#define KR23_SafetyData_result_tag               14
#define KR23_PollMessage_thruster_0_PWM_tag      1
#define KR23_PollMessage_thruster_1_PWM_tag      2
#define KR23_PollMessage_thruster_2_PWM_tag      3
#define KR23_PollMessage_thruster_3_PWM_tag      4
#define KR23_PollMessage_thruster_4_PWM_tag      5
#define KR23_PollMessage_thruster_5_PWM_tag      6
#define KR23_PollMessage_thruster_6_PWM_tag      7
#define KR23_PollMessage_thruster_7_PWM_tag      8
#define KR23_PollMessage_servo_0_PWM_tag         9
#define KR23_PollMessage_servo_1_PWM_tag         10
#define KR23_PollMessage_servo_2_PWM_tag         11
#define KR23_PollMessage_light_PWM_tag           12
#define KR23_PollMessage_claw_state_tag          13
#define KR23_PollMessage_result_tag              14
#define KR23_OutgoingMessage_thrusterCommand_tag 1
#define KR23_OutgoingMessage_attachmentCommand_tag 2
#define KR23_IncomingMessage_sensorsData_tag     1
#define KR23_IncomingMessage_safetyData_tag      2
#define KR23_IncomingMessage_pollMessage_tag     3

/* Struct field encoding specification for nanopb */
#define KR23_ThrusterCommand_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   thruster_0_PWM,    1) \
X(a, STATIC,   SINGULAR, UINT32,   thruster_1_PWM,    2) \
X(a, STATIC,   SINGULAR, UINT32,   thruster_2_PWM,    3) \
X(a, STATIC,   SINGULAR, UINT32,   thruster_3_PWM,    4) \
X(a, STATIC,   SINGULAR, UINT32,   thruster_4_PWM,    5) \
X(a, STATIC,   SINGULAR, UINT32,   thruster_5_PWM,    6) \
X(a, STATIC,   SINGULAR, UINT32,   thruster_6_PWM,    7) \
X(a, STATIC,   SINGULAR, UINT32,   thruster_7_PWM,    8) \
X(a, STATIC,   SINGULAR, UENUM,    result,           14)
#define KR23_ThrusterCommand_CALLBACK NULL
#define KR23_ThrusterCommand_DEFAULT NULL

#define KR23_AttachmentCommand_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   servo_0_PWM,       1) \
X(a, STATIC,   SINGULAR, UINT32,   servo_1_PWM,       2) \
X(a, STATIC,   SINGULAR, UINT32,   servo_2_PWM,       3) \
X(a, STATIC,   SINGULAR, UINT32,   light_PWM,         4) \
X(a, STATIC,   SINGULAR, UENUM,    claw_state,        5) \
X(a, STATIC,   SINGULAR, UENUM,    result,           14)
#define KR23_AttachmentCommand_CALLBACK NULL
#define KR23_AttachmentCommand_DEFAULT NULL

#define KR23_SensorsData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, DOUBLE,   temperature,       1) \
X(a, STATIC,   SINGULAR, DOUBLE,   humidity,          2) \
X(a, STATIC,   SINGULAR, DOUBLE,   pressure,          3) \
X(a, STATIC,   SINGULAR, DOUBLE,   depth,             4) \
X(a, STATIC,   SINGULAR, DOUBLE,   accelerometer_x,   5) \
X(a, STATIC,   SINGULAR, DOUBLE,   accelerometer_y,   6) \
X(a, STATIC,   SINGULAR, DOUBLE,   accelerometer_z,   7) \
X(a, STATIC,   SINGULAR, DOUBLE,   quaternion_real,   8) \
X(a, STATIC,   SINGULAR, DOUBLE,   quaternion_i,      9) \
X(a, STATIC,   SINGULAR, DOUBLE,   quaternion_j,     10) \
X(a, STATIC,   SINGULAR, DOUBLE,   quaternion_k,     11) \
X(a, STATIC,   SINGULAR, UENUM,    result,           14)
#define KR23_SensorsData_CALLBACK NULL
#define KR23_SensorsData_DEFAULT NULL

#define KR23_SafetyData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, DOUBLE,   power_0,           1) \
X(a, STATIC,   SINGULAR, DOUBLE,   power_1,           2) \
X(a, STATIC,   SINGULAR, DOUBLE,   power_2,           3) \
X(a, STATIC,   SINGULAR, DOUBLE,   power_3,           4) \
X(a, STATIC,   SINGULAR, DOUBLE,   current_0,         5) \
X(a, STATIC,   SINGULAR, DOUBLE,   current_1,         6) \
X(a, STATIC,   SINGULAR, DOUBLE,   current_2,         7) \
X(a, STATIC,   SINGULAR, DOUBLE,   current_3,         8) \
X(a, STATIC,   SINGULAR, DOUBLE,   voltage_0,         9) \
X(a, STATIC,   SINGULAR, DOUBLE,   voltage_1,        10) \
X(a, STATIC,   SINGULAR, DOUBLE,   voltage_2,        11) \
X(a, STATIC,   SINGULAR, DOUBLE,   voltage_3,        12) \
X(a, STATIC,   SINGULAR, BOOL,     leak,             13) \
X(a, STATIC,   SINGULAR, UENUM,    result,           14)
#define KR23_SafetyData_CALLBACK NULL
#define KR23_SafetyData_DEFAULT NULL

#define KR23_PollMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   thruster_0_PWM,    1) \
X(a, STATIC,   SINGULAR, UINT32,   thruster_1_PWM,    2) \
X(a, STATIC,   SINGULAR, UINT32,   thruster_2_PWM,    3) \
X(a, STATIC,   SINGULAR, UINT32,   thruster_3_PWM,    4) \
X(a, STATIC,   SINGULAR, UINT32,   thruster_4_PWM,    5) \
X(a, STATIC,   SINGULAR, UINT32,   thruster_5_PWM,    6) \
X(a, STATIC,   SINGULAR, UINT32,   thruster_6_PWM,    7) \
X(a, STATIC,   SINGULAR, UINT32,   thruster_7_PWM,    8) \
X(a, STATIC,   SINGULAR, UINT32,   servo_0_PWM,       9) \
X(a, STATIC,   SINGULAR, UINT32,   servo_1_PWM,      10) \
X(a, STATIC,   SINGULAR, UINT32,   servo_2_PWM,      11) \
X(a, STATIC,   SINGULAR, UINT32,   light_PWM,        12) \
X(a, STATIC,   SINGULAR, UINT32,   claw_state,       13) \
X(a, STATIC,   SINGULAR, UENUM,    result,           14)
#define KR23_PollMessage_CALLBACK NULL
#define KR23_PollMessage_DEFAULT NULL

#define KR23_OutgoingMessage_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  thrusterCommand,   1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  attachmentCommand,   2)
#define KR23_OutgoingMessage_CALLBACK NULL
#define KR23_OutgoingMessage_DEFAULT NULL
#define KR23_OutgoingMessage_thrusterCommand_MSGTYPE KR23_ThrusterCommand
#define KR23_OutgoingMessage_attachmentCommand_MSGTYPE KR23_AttachmentCommand

#define KR23_IncomingMessage_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sensorsData,       1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  safetyData,        2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  pollMessage,       3)
#define KR23_IncomingMessage_CALLBACK NULL
#define KR23_IncomingMessage_DEFAULT NULL
#define KR23_IncomingMessage_sensorsData_MSGTYPE KR23_SensorsData
#define KR23_IncomingMessage_safetyData_MSGTYPE KR23_SafetyData
#define KR23_IncomingMessage_pollMessage_MSGTYPE KR23_PollMessage

extern const pb_msgdesc_t KR23_ThrusterCommand_msg;
extern const pb_msgdesc_t KR23_AttachmentCommand_msg;
extern const pb_msgdesc_t KR23_SensorsData_msg;
extern const pb_msgdesc_t KR23_SafetyData_msg;
extern const pb_msgdesc_t KR23_PollMessage_msg;
extern const pb_msgdesc_t KR23_OutgoingMessage_msg;
extern const pb_msgdesc_t KR23_IncomingMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define KR23_ThrusterCommand_fields &KR23_ThrusterCommand_msg
#define KR23_AttachmentCommand_fields &KR23_AttachmentCommand_msg
#define KR23_SensorsData_fields &KR23_SensorsData_msg
#define KR23_SafetyData_fields &KR23_SafetyData_msg
#define KR23_PollMessage_fields &KR23_PollMessage_msg
#define KR23_OutgoingMessage_fields &KR23_OutgoingMessage_msg
#define KR23_IncomingMessage_fields &KR23_IncomingMessage_msg

/* Maximum encoded size of messages (where known) */
#define KR23_AttachmentCommand_size              28
#define KR23_IncomingMessage_size                299
#define KR23_OutgoingMessage_size                82
#define KR23_PollMessage_size                    80
#define KR23_SafetyData_size                     112
#define KR23_SensorsData_size                    101
#define KR23_ThrusterCommand_size                50

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
